{
  "info": {
    "name": "Fraud Detection Testing - Simple",
    "description": "Simplified fraud detection test scenarios for the Data Streaming Application. Fixed version to resolve ENOTFOUND errors.",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "version": "1.1.0"
  },
  "item": [
    {
      "name": "🏥 Health Checks",
      "item": [
        {
          "name": "Order Producer Health",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Order Producer is healthy\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{order_producer_url}}/actuator/health",
              "host": ["{{order_producer_url}}"],
              "path": ["actuator", "health"]
            }
          }
        },
        {
          "name": "Analytics Consumer Health",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Analytics Consumer is healthy\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{analytics_consumer_url}}/actuator/health",
              "host": ["{{analytics_consumer_url}}"],
              "path": ["actuator", "health"]
            }
          }
        }
      ]
    },
    {
      "name": "🚨 High-Value Order Fraud Test",
      "item": [
        {
          "name": "Create High-Value Order ($2500)",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"High-value order accepted\", function () {",
                  "    pm.response.to.have.status(200);",
                  "    pm.expect(pm.response.text()).to.include(\"Order received and published\");",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"orderId\": \"fraud-test-{{$randomInt}}\",\n  \"customerId\": \"test-customer-1\",\n  \"amount\": 2500.00,\n  \"timestamp\": {{current_timestamp}},\n  \"items\": [\"expensive-jewelry\", \"luxury-watch\"]\n}"
            },
            "url": {
              "raw": "{{order_producer_url}}/orders",
              "host": ["{{order_producer_url}}"],
              "path": ["orders"]
            }
          }
        },
        {
          "name": "Wait and Check Fraud Alerts",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Fraud alerts retrieved\", function () {",
                  "    pm.response.to.have.status(200);",
                  "    const alerts = pm.response.json();",
                  "    pm.expect(alerts).to.be.an('array');",
                  "    console.log('Total fraud alerts:', alerts.length);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{analytics_consumer_url}}/analytics/fraud",
              "host": ["{{analytics_consumer_url}}"],
              "path": ["analytics", "fraud"]
            }
          }
        }
      ]
    },
    {
      "name": "⚡ Rapid Orders Fraud Test",
      "item": [
        {
          "name": "Rapid Order 1",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"orderId\": \"rapid-1-{{$randomInt}}\",\n  \"customerId\": \"rapid-customer-{{$randomInt}}\",\n  \"amount\": 99.99,\n  \"timestamp\": {{current_timestamp}},\n  \"items\": [\"item-1\"]\n}"
            },
            "url": {
              "raw": "{{order_producer_url}}/orders",
              "host": ["{{order_producer_url}}"],
              "path": ["orders"]
            }
          }
        },
        {
          "name": "Rapid Order 2",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"orderId\": \"rapid-2-{{$randomInt}}\",\n  \"customerId\": \"rapid-customer-{{$randomInt}}\",\n  \"amount\": 99.99,\n  \"timestamp\": {{current_timestamp}},\n  \"items\": [\"item-2\"]\n}"
            },
            "url": {
              "raw": "{{order_producer_url}}/orders",
              "host": ["{{order_producer_url}}"],
              "path": ["orders"]
            }
          }
        },
        {
          "name": "Rapid Order 3",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"orderId\": \"rapid-3-{{$randomInt}}\",\n  \"customerId\": \"rapid-customer-{{$randomInt}}\",\n  \"amount\": 99.99,\n  \"timestamp\": {{current_timestamp}},\n  \"items\": [\"item-3\"]\n}"
            },
            "url": {
              "raw": "{{order_producer_url}}/orders",
              "host": ["{{order_producer_url}}"],
              "path": ["orders"]
            }
          }
        },
        {
          "name": "Rapid Order 4",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"orderId\": \"rapid-4-{{$randomInt}}\",\n  \"customerId\": \"rapid-customer-{{$randomInt}}\",\n  \"amount\": 99.99,\n  \"timestamp\": {{current_timestamp}},\n  \"items\": [\"item-4\"]\n}"
            },
            "url": {
              "raw": "{{order_producer_url}}/orders",
              "host": ["{{order_producer_url}}"],
              "path": ["orders"]
            }
          }
        },
        {
          "name": "Rapid Order 5",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"orderId\": \"rapid-5-{{$randomInt}}\",\n  \"customerId\": \"rapid-customer-{{$randomInt}}\",\n  \"amount\": 99.99,\n  \"timestamp\": {{current_timestamp}},\n  \"items\": [\"item-5\"]\n}"
            },
            "url": {
              "raw": "{{order_producer_url}}/orders",
              "host": ["{{order_producer_url}}"],
              "path": ["orders"]
            }
          }
        },
        {
          "name": "Rapid Order 6 (Triggers Alert)",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Rapid order 6 accepted\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"orderId\": \"rapid-6-{{$randomInt}}\",\n  \"customerId\": \"rapid-customer-{{$randomInt}}\",\n  \"amount\": 99.99,\n  \"timestamp\": {{current_timestamp}},\n  \"items\": [\"item-6\"]\n}"
            },
            "url": {
              "raw": "{{order_producer_url}}/orders",
              "host": ["{{order_producer_url}}"],
              "path": ["orders"]
            }
          }
        }
      ]
    },
    {
      "name": "📊 Check All Fraud Alerts",
      "item": [
        {
          "name": "Get All Fraud Alerts",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Fraud alerts retrieved successfully\", function () {",
                  "    pm.response.to.have.status(200);",
                  "    const alerts = pm.response.json();",
                  "    pm.expect(alerts).to.be.an('array');",
                  "    console.log('Total fraud alerts found:', alerts.length);",
                  "    ",
                  "    // Log each alert for debugging",
                  "    alerts.forEach((alert, index) => {",
                  "        console.log(`Alert ${index + 1}:`, alert.reason, '- Customer:', alert.customerId, '- Amount:', alert.amount);",
                  "    });",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{analytics_consumer_url}}/analytics/fraud",
              "host": ["{{analytics_consumer_url}}"],
              "path": ["analytics", "fraud"]
            }
          }
        },
        {
          "name": "Get Customer Statistics",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{analytics_consumer_url}}/analytics/customers",
              "host": ["{{analytics_consumer_url}}"],
              "path": ["analytics", "customers"]
            }
          }
        },
        {
          "name": "Get Sales Analytics",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{analytics_consumer_url}}/analytics/sales",
              "host": ["{{analytics_consumer_url}}"],
              "path": ["analytics", "sales"]
            }
          }
        }
      ]
    },
    {
      "name": "🌐 Infrastructure Checks",
      "item": [
        {
          "name": "Kafka UI",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{kafka_ui_url}}",
              "host": ["{{kafka_ui_url}}"]
            }
          }
        },
        {
          "name": "Flink Dashboard",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{flink_dashboard_url}}",
              "host": ["{{flink_dashboard_url}}"]
            }
          }
        }
      ]
    }
  ]
}
